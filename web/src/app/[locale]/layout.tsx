import type { Metadata } from 'next'
import { Rubik } from 'next/font/google'
import '../globals.css'
import Providers from '@/providers/Providers'
import { hasLocale } from 'next-intl'
import { routing } from '@/i18n/routing'
import { notFound } from 'next/navigation'
import { setRequestLocale } from 'next-intl/server'

const rubik = Rubik({
    subsets: ['latin'],
    variable: '--font-rubik',
})
export const metadata: Metadata = {
    title: 'Dokidoki',
    description: 'Generated by create next app',
}

export function generateStaticParams() {
    return routing.locales.map(locale => ({ locale }))
}

const RootLayout = async ({
    children,
    params,
}: {
    children: React.ReactNode
    params: Promise<{ locale: string }>
}) => {
    const { locale } = await params
    if (!hasLocale(routing.locales, locale)) {
        notFound()
    }
    setRequestLocale(locale)

    return (
        <html lang={locale}>
            <body className={`${rubik.className} antialiased`}>
                <Providers>{children}</Providers>
            </body>
        </html>
    )
}
export default RootLayout
