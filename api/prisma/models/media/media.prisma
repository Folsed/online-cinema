enum MediaType {
  movie
  series
  anime
}

enum MediaStatus {
  upcoming
  release
  cancelled
}

model Media {
  id                String              @id @default(uuid())
  type              MediaType
  originalTitle     String              @map("original_title")
  alias             String              @unique
  releaseDate       DateTime            @map("release_date")
  runtime           Int
  status            MediaStatus
  metadata          Json?
  active            Boolean
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")
  MediaTranslations MediaTranslations[]
  GenresOnMedia     GenresOnMedia[]
  MediaImages       MediaImages[]
  HomepageCarousel  HomepageCarousel?

  @@map("media")
}

model MediaTranslations {
  mediaId     String   @map("media_id")
  media       Media    @relation(fields: [mediaId], references: [id])
  langCode    String   @map("lang_code")
  lang        Language @relation(fields: [langCode], references: [code])
  posterTitle String   @map("poster_title")
  synopsis    String

  @@id([mediaId, langCode])
  @@map("media_translations")
}

enum MediaImageType {
  poster
  logo
  backdrop
  thumbnail
}

model MediaImages {
  id        String         @id @default(uuid())
  mediaId   String         @map("media_id")
  media     Media          @relation(fields: [mediaId], references: [id])
  type      MediaImageType
  url       String
  width     Int
  height    Int
  altText   String         @map("alt_text")
  metadata  Json?
  createdAt DateTime       @default(now()) @map("created_at")
  updatedAt DateTime       @updatedAt @map("updated_at")

  @@map("media_images")
}
